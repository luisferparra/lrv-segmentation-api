{
    "swagger": "2.0",
    "info": {
        "title": "CRM API",
        "description": "Api CRM Segmentation of IdChannels. It nevers return personal data, always meta-data",
        "contact": {
            "name": "Luis Fernando Parra",
            "url": "https://www.netsales.es"
        },
        "version": "1.1.0"
    },
    "basePath": "/api",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/segmentations": {
            "get": {
                "tags": [
                    "Segmentation Info"
                ],
                "summary": "Returns all possible segmentation available in the system",
                "description": "Api get that returns all possibe segmentation available in the system. Inbetween all information, notice the api_name response, wich is the key for making segmentation all getting all available values for such segmentation",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of all Segmentations Available",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoResponses"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Segmentation Info"
                ],
                "summary": "Create new Segmentation",
                "description": "Functionality for admin roles. Create new segmentation environment. From now, if the systema has data, can be used as an additional variable for segmentation and get information about users whom match with the segmentation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information for creating the segmentation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SegmentationPostResponses"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Segmentations Available",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoResponses"
                        }
                    },
                    "419": {
                        "description": "Error Creating table.",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    },
                    "422": {
                        "description": "Error of input data validation. Can be either lack of data or lack of required fields, or duplicated api_name or name fields",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    }
                }
            }
        },
        "/segmentations/{api_name}": {
            "get": {
                "tags": [
                    "Segmentation Info"
                ],
                "summary": "Returns all values of a certain  segmentation available in the system",
                "description": "Api get that returns all values available for performing a segmentation for a specific field",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_name",
                        "in": "path",
                        "description": "api_name field returned at the /segmentation/info api.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "api_name not found",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    },
                    "200": {
                        "description": "List of all Segmentations Available",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Segmentation Info"
                ],
                "summary": "Add data for a certain segmentation",
                "description": "Functionality for admin roles. Add values for a specific segmentation. Therefore, such values will be available for segmentation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_name",
                        "in": "path",
                        "description": "api_name field returned at the /segmentation/info api.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information including the values.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SegmentationPostValuesInput"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Segmentations Available",
                        "schema": {
                            "$ref": "#/definitions/SegmentationPostValuesResponses"
                        }
                    },
                    "404": {
                        "description": "api_name not found",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    },
                    "420": {
                        "description": "Action cannot be performed on the selected data. Surelly, Table is not availble or is of type 'bit', therefore, there is no relational data for segmentation (segmentation is either 0 or 1)",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    }
                }
            }
        },
        "/segmentations/{api_name}/{id}": {
            "put": {
                "tags": [
                    "Segmentation Info"
                ],
                "summary": "Modify the CRM or Normalized value from a certain segmentation",
                "description": "Functionality for admin roles. Modify values for a specific segmentation. Therefore, such values will be available for segmentation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_name",
                        "in": "path",
                        "description": "api_name field returned at the /segmentation/info api.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the value that requires to be updated (from the api_name segmentation)",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Information including the values.",
                        "required": true,
                        "schema": {
                            "property": "data",
                            "type": "array",
                            "items": {
                                "required": [
                                    "input_data_mode",
                                    "value"
                                ],
                                "properties": {
                                    "input_data_mode": {
                                        "description": "Type of value to be updated. It can be the CRM value (crm) or the normalized value (val)",
                                        "type": "string",
                                        "enum": [
                                            "crm",
                                            "val"
                                        ],
                                        "example": "crm"
                                    },
                                    "value": {
                                        "description": "New value to be updated",
                                        "type": "string",
                                        "example": "HOTMAIL.COM"
                                    }
                                }
                            }
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Segmentations Available",
                        "schema": {
                            "$ref": "#/definitions/CreateUsersByApiNameCRMDataResponse"
                        }
                    },
                    "404": {
                        "description": "api_name not found",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    },
                    "420": {
                        "description": "Action cannot be performed on the selected data. Surelly, Table is not availble or is of type 'bit', therefore, there is no relational data for segmentation (segmentation is either 0 or 1)",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Segmentation Info"
                ],
                "summary": "Delete a value from a certain segmentation",
                "description": "Functionality for admin roles. Remove a value from a specific segmentation ONLY if there is not user assigned to such value. If value is removed, won`t be available for segmentation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_name",
                        "in": "path",
                        "description": "api_name field returned at the /segmentation/info api.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the value that requires to be removed (from the api_name segmentation)",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Segmentations Available",
                        "schema": {
                            "$ref": "#/definitions/CreateUsersByApiNameCRMDataResponse"
                        }
                    },
                    "404": {
                        "description": "id or api_name not found",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    },
                    "403": {
                        "description": "Action cannot be performed on the selected data. Surelly cannot be removed due to data assigned to that value",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    }
                }
            }
        },
        "/data/loads": {
            "post": {
                "tags": [
                    "Synchro Data"
                ],
                "summary": "Synchro CRM Data with Api-Crm",
                "description": "Functionality for admin roles. Update/Insert values for users. As entry api will receive idchannels and what will be updated for those idchannels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Data to be included or updated including the values.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createUsersByIdCRMDataInput"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of the Data Load. Notice it is included in a Queue and will be processed in background",
                        "schema": {
                            "$ref": "#/definitions/CreateUsersByApiNameCRMDataResponse"
                        }
                    },
                    "404": {
                        "description": "api_name not found",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    },
                    "422": {
                        "description": "Error of input data validation. Can be either lack of data or lack of required fields, or duplicated api_name or name fields",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    }
                }
            }
        },
        "/data/loads/{api_name}": {
            "post": {
                "tags": [
                    "Synchro Data"
                ],
                "summary": "Synchro CRM Data with Api-Crm",
                "description": "Functionality for admin roles. Update/Insert values for a certain segmentation (segmentation as path in the URL). The Data will be processed in background, so you will need to check the specific api for checking the status of the process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_name",
                        "in": "path",
                        "description": "api_name field returned at the /segmentation/info api.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Data to be included or updated including the values.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUsersByApiNameCRMDataInput"
                        },
                        "type": "object"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of the Data Load. Notice it is included in a Queue and will be processed in background",
                        "schema": {
                            "$ref": "#/definitions/CreateUsersByApiNameCRMDataResponse"
                        }
                    },
                    "404": {
                        "description": "api_name not found",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    },
                    "422": {
                        "description": "Error of input data validation. Can be either lack of data or lack of required fields, or duplicated api_name or name fields",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    }
                }
            }
        },
        "/data/loads/info/{uuid_token}": {
            "get": {
                "tags": [
                    "Synchro Data"
                ],
                "summary": "Retrieve information about the status of the queued Bulk Data Load",
                "description": "Functionality that returns for admin roles. Update/Insert values for a certain segmentation (segmentation as path in the URL). The Data will  processed in background, so you will need to check the specific api for checking the status of the process",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uuid_token",
                        "in": "path",
                        "description": "uuid_token generated for the load in background. Notice: uuid format https://es.wikipedia.org/wiki/Identificador_%C3%BAnico_universal",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response of the Data Load. Notice it is included in a Queue and will be processed in background",
                        "schema": {
                            "$ref": "#/definitions/LoadDataInfoResponse"
                        }
                    },
                    "404": {
                        "description": "uuid_token not correct or not found",
                        "schema": {
                            "$ref": "#/definitions/SegmentationInfoApiErrorResponses"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "SegmentationInfoResponses": {
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "format": "int32",
                    "items": {
                        "$ref": "#/definitions/SegmentationInfoResponse"
                    }
                }
            },
            "type": "object"
        },
        "SegmentationInfoResponse": {
            "required": [
                "data"
            ],
            "properties": {
                "description": {
                    "description": "Description for bettle knowledge",
                    "type": "string",
                    "example": "Usuario Abridor"
                },
                "api_name": {
                    "description": "Name of the api for getting the possible values for that segmentation",
                    "type": "string",
                    "example": "marketing-opener"
                },
                "data_type": {
                    "description": "Data type that the segmentation accepts",
                    "type": "string",
                    "enum": [
                        "simple",
                        "multiple"
                    ],
                    "example": "simple"
                }
            },
            "type": "object"
        },
        "SegmentationInfoApiResponse": {
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "format": "int32",
                    "items": {
                        "properties": {
                            "id": {
                                "description": "Internal Id",
                                "type": "integer",
                                "example": "1"
                            },
                            "crm_value": {
                                "description": "CRM Internal Id",
                                "type": "string",
                                "example": "35"
                            },
                            "front_value": {
                                "description": "Front Value",
                                "type": "string",
                                "example": "HOTMAIL.COM"
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "SegmentationInfoApiErrorResponses": {
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "properties": {
                        "code": {
                            "description": "Internal Code Error",
                            "type": "string",
                            "example": "SVS-404"
                        },
                        "http_code": {
                            "description": "Http Status returned in the header, replicated as information",
                            "type": "integer",
                            "example": "404"
                        },
                        "message": {
                            "description": "Additional information about the error ",
                            "type": "string",
                            "example": "Api Resource not Found"
                        }
                    },
                    "type": "object",
                    "format": "int32"
                }
            },
            "type": "object"
        },
        "SegmentationPostResponses": {
            "required": [
                "name",
                "action",
                "description",
                "api_name",
                "data_type"
            ],
            "properties": {
                "name": {
                    "description": "Must be unique in the system. Will be used for internal management and control. If don't know what to send, send the same than the field api_name",
                    "type": "string",
                    "example": "api new segmentation"
                },
                "action": {
                    "description": "Admited values: normal, bit. Normal is for general use. Bit: If the values are 0 or 1, i.e. for openers, or clickers",
                    "type": "string",
                    "example": "normal"
                },
                "description": {
                    "description": "Description of what the segmentation is about",
                    "type": "string",
                    "example": "Segmentation for geolocation purposes"
                },
                "api_name": {
                    "description": "Name of the segmentation for accesing or segmenting such values",
                    "type": "string",
                    "example": "front segmentation name"
                },
                "data_type_id": {
                    "description": "Data type that will contain the segmentation: 1->simple, 2->multiple. Simple means for example email domain. An user can only have 1 email domain. Multiple means that an user can have several values, i.e. owner of devices (can have several devices)",
                    "type": "integer",
                    "example": "1"
                }
            },
            "type": "object"
        },
        "SegmentationPostValuesInput": {
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "required": [
                        "crm_value",
                        "front_value"
                    ],
                    "type": "array",
                    "format": "int32",
                    "items": {
                        "properties": {
                            "crm_value": {
                                "description": "CRM Internal Id",
                                "type": "string",
                                "example": "35"
                            },
                            "front_value": {
                                "description": "Front Value",
                                "type": "string",
                                "example": "HOTMAIL.COM"
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "SegmentationPostValuesResponses": {
            "required": [
                "received",
                "errors"
            ],
            "properties": {
                "received": {
                    "description": "Number of items received",
                    "type": "integer",
                    "example": "5"
                },
                "errors": {
                    "required": [
                        "count"
                    ],
                    "properties": {
                        "count": {
                            "description": "Number of errors found. These errors are always regarding input data (bad keys, empty values, number of entries not valid) and never if has been inserted or not",
                            "type": "integer",
                            "example": "3"
                        },
                        "data": {
                            "required": [
                                "msg"
                            ],
                            "type": "array",
                            "items": {
                                "properties": {
                                    "msg": {
                                        "description": "Description of the errorInternal Id",
                                        "type": "string",
                                        "example": "At least 1 Field of the received does not exists in the system"
                                    }
                                }
                            }
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "createUsersByIdCRMDataInput": {
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "Array with the input data",
                    "required": [
                        "id",
                        "api_name",
                        "input_data_mode"
                    ],
                    "type": "array",
                    "items": {
                        "properties": {
                            "id": {
                                "description": "Array de idchannels a actualizar/insertar. Al menos debe venir 1 elemento",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": [
                                        34,
                                        45,
                                        87,
                                        123
                                    ]
                                }
                            },
                            "api_name": {
                                "description": "api_name field returned at the /segmentation/info api.",
                                "type": "string",
                                "example": "api-name"
                            },
                            "input_data_mode": {
                                "description": "Type of input data. It can be the ID of the value (id), the CRM value (crm) or the normalized value (val)",
                                "type": "string",
                                "enum": [
                                    "id",
                                    "crm",
                                    "val"
                                ],
                                "example": "crm"
                            },
                            "val": {
                                "description": "Array of values or ids to update from the api_name segmentation. Values data type can vary depending on the input_data_mode. If it is 'id' will be integer, i.o.c. will be string. If the api_name is the type 'bit' only will accept either 0 or 1, and the first element of the array if the number of elements are more than 1. The same will happen if the field does not allow multiple data, 'simple' where only the first element of the array will be processed",
                                "type": "array",
                                "items": {
                                    "type": "variant",
                                    "example": [
                                        "HOTMAIL.COM",
                                        "GMAIL.COM"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "CreateUsersByApiNameCRMDataInput": {
            "required": [
                "input_data_mode",
                "data"
            ],
            "properties": {
                "input_data_mode": {
                    "description": "Type of input data. It can be the ID of the value (id), the CRM value (crm) or the normalized value (val)",
                    "type": "string",
                    "enum": [
                        "id",
                        "crm",
                        "val"
                    ],
                    "example": "crm"
                },
                "data": {
                    "description": "Array with information about data to be inserted or updated",
                    "required": [
                        "id",
                        "val"
                    ],
                    "type": "array",
                    "items": {
                        "properties": {
                            "id": {
                                "description": "If input_data_mode is id, this data will be numeric, as it will be the ID of the value, i.o.c it will be String. If the table is of type bit, it will only be either 0 or 1",
                                "type": "variant",
                                "example": "HOTMAIL.COM"
                            },
                            "val": {
                                "description": "Array with the Channelsid to be updated or inserted",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "example": "[12,13,15]"
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "CreateUsersByApiNameCRMDataResponse": {
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "required": [
                        "id",
                        "result",
                        "msg"
                    ],
                    "properties": {
                        "id": {
                            "description": "Id of the request created (uuid format)",
                            "type": "uuid",
                            "example": "ce68c0ca-075b-11e8-ba89-0ed5f89f718b"
                        },
                        "result": {
                            "description": "Result of inserting the request in the queue. 1 Correct, 0 Incorrect",
                            "type": "integer",
                            "example": 1
                        },
                        "msg": {
                            "description": "Additional string of the response generated",
                            "type": "string",
                            "example": "Data Received. Will be processed in background"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "LoadDataInfoResponse": {
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "required": [
                        "uuid_token",
                        "functionality",
                        "api_name",
                        "request"
                    ],
                    "properties": {
                        "uuid_token": {
                            "description": "uuid token of the item",
                            "type": "string",
                            "example": "d0e7facd-6778-41b4-8e30-5ead387f7478"
                        },
                        "functionality": {
                            "description": "Functionality required originally",
                            "type": "string",
                            "example": "createUsersByIdCRMData"
                        },
                        "api_name": {
                            "description": "api_name field required in the request (if any)",
                            "type": "string",
                            "example": "api-name"
                        },
                        "request": {
                            "description": "Original request in Json structure",
                            "type": "string",
                            "example": "{'data':[{'id':[15],'api_name':'api-name','input_data_mode':'id','val':[1,2,4]},{'id':[15,13,14],'api_name':'marketing-opener','input_data_mode':'id','val':[1,0,4]}]}"
                        },
                        "response": {
                            "description": "If not empty, the status of the process (OK or fail). If empty or null means that has not been processed yet.",
                            "type": "string",
                            "example": "OK"
                        },
                        "response_errors": {
                            "description": "If not empty, all errors found in Json structure.",
                            "type": "string",
                            "example": ""
                        },
                        "cont_input": {
                            "description": "Number of unique idchannels that have been updated.",
                            "type": "integer",
                            "example": 25
                        },
                        "cont_processed": {
                            "description": "Total number of inserts/updates performanced.",
                            "type": "integer",
                            "example": 32
                        },
                        "processed": {
                            "description": "0 if has not been processed. 1 have been processed. 2 being processed at this moment.",
                            "type": "integer",
                            "example": 1
                        },
                        "processed_at": {
                            "description": "if not null, date was processed.",
                            "type": "date",
                            "example": "2018-03-02 21:02:09"
                        },
                        "created_at": {
                            "description": "Date the request was made.",
                            "type": "date",
                            "example": "2017-03-02 21:02:09"
                        },
                        "modified_at": {
                            "description": "Date the request was modified.",
                            "type": "date",
                            "example": "2017-03-02 22:02:09"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "Segmentation Info",
            "description": "Access to Information and update information about the posibility of segmentation"
        },
        {
            "name": "Synchro Data",
            "description": "Api for synchro CRM data with this system"
        },
        {
            "name": "Segmentate Operations",
            "description": "Api for Segmentate data"
        }
    ],
    "externalDocs": {
        "description": "Find out how to implement a call to the api using PHP and Curl",
        "url": "https://dev.netsales.es/stat-server/swagger/manual/"
    }
}